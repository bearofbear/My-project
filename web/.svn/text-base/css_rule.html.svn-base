<!DOCTYPE HTML>
<html>
<head>
	<meta charset="UTF-8">
	<title></title>
	<link href="css/front_end.css" rel="stylesheet" />
</head>
<body>
	<div class="page">
		<ol>
			<li> 编码统一为<span class="hl_3" style="padding:2px 10px;margin:0 5px;">UTF-8</span>。</li>
			<li>协作开发及分工:共用css文件base.css 由指定开发人员负责维护。<p>协作开发过程中, 每个页面请务必都要引入, 此文件包含reset及头部底部样式, 此文件不可随意修改;</p></li>
			<li>class与id的使用: id是唯一的并是父级的, class是可以重复的并是子级的, 所以id仅使用在大的模块上, class可用在重复使用率高及子级中</li>
			<li>class与id命名: 大的框架命名比如header/footer/wrapper/left/right
				<ul>
					<li>其他样式名称由 小写英文 & 数字 & _ 来组合命名, 如q_comment, 避免使用中文拼音, 尽量使用简易的单词组合；</li>
					<li><p style="color:#f00;">命名要语义化, 简明化。</p></li>
				</ul>
			</li>
			<li>规避class与id命名相同</li>
			<li>为 JavaScript 预留钩子的命名, 请尽量以" J_ "起始, 比如: J_hide, J_show；如果"J_"后面有多个单词组合，则使用驼峰式命名，如"J_showItem"。</li>
			<li><p>css书写顺序:遵循（<span class="hl_5">布局定位属性–>自身属性–>文本属性–>其他属性->浏览器兼容hack</span>），同类属性应写在一起。</p>
				<p>属性列举：</p>
				<ul>
					<li>布局定位属性主要包括: position（top,right,bottom,left）、z-index（层叠顺序）、margin、padding、float（包括clear）、display、width、height、visibility、overflow等；</li>
					<li>自身属性主要包括: background 、border；</li>
					<li>文本属性主要包括：font、color、text-align、text-decoration、text-indent等；</li>
					<li>其他属性包括: list-style（列表样式）、vertical-align、cursor</li>
					<li>兼容HACK：*zoom: 1; _display:inline; _margin-right:-3px;</li>
				</ul>
				<p>书写示例：</p>
				<pre>
.class{		
	position:absolute;
	left:0;
	top:10px;
	z-index:10000;
	float:left;
	display:inline-block;
	width:100px;
	height:200px;
	margin-right:10px;
	border:1px solid red;
	font-size:14px;
	font-weight:700;
	cursor:point;
	*zoom:1;
}</pre>
			</li>
			<li>
				<p>书写代码前, 考虑并提高样式重复使用率；</p>
				<p>尽量利用class或id进行css规则的定义，做到真正和结构相分离，避免代码耦合，css里规则的层次最好不超过三层。</p>
			</li>
			<li>样式表中中文字体名, 请务必转码成unicode码, 以避免编码错误时乱码，书写示例：
			<p>如需设置当前字体为“微软雅黑”，写法如下：<span class="hl_2">.txt{ font-family:\5fae\8f6f\96c5\9ed1}</span></p>
			<dl>
				<dt>常用字体的对照表</dt>
				<dd>
					<table>
						<thead>
							<tr>
								<th>中文名称</th>
								<th>Unicode</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>新细明体</td>
								<td>\65B0\7EC6\660E\4F53</td>
							</tr>
							<tr>
								<td>细明体</td>
								<td>\7EC6\660E\4F53</td>
							</tr>
							<tr>
								<td>标楷体</td>
								<td>\6807\6977\4F53</td>
							</tr>
							<tr>
								<td>黑体</td>
								<td>\9ED1\4F53</td>
							</tr>
							<tr>
								<td>宋体</td>
								<td>\5B8B\4F53</td>
							</tr>
							<tr>
								<td>新宋体</td>
								<td>\65B0\5B8B\4F53</td>
							</tr>
							<tr>
								<td>仿宋</td>
								<td>\4EFF\5B8B</td>
							</tr>
							<tr>
								<td>楷体</td>
								<td>\6977\4F53</td>
							</tr>
							<tr>
								<td>仿宋_GB2312</td>
								<td>\4EFF\5B8B_GB2312</td>
							</tr>
							<tr>
								<td>楷体_GB2312</td>
								<td>\6977\4F53_GB2312</td>
							</tr>
							<tr>
								<td>微软正黑体</td>
								<td>\5FAE\x8F6F\6B63\9ED1\4F53</td>
							</tr>
							<tr>
								<td>微软雅黑</td>
								<td>\5FAE\8F6F\96C5\9ED1</td>
							</tr>
						</tbody>
					</table>
				</dd>
			</dl>
			</li>
			<li><p>背景图片请尽可能使用css sprite技术, 减小http请求；</p>
				<ul>
					<li>考虑到多人协作开发, sprite按模块制作；并且制作完成后，使用yahoo图片压缩工具smush.it进行无损压缩。</li>
					<li>工具地址：<a href="javascript:">www.smush.it</a>，<span class="hl_1">sprites之前的原图应进行保留，以备修改。</span></li>
				</ul>
				<p style="margin-top:15px;">Sprites适用的基本规范：</p>
				<ul>
					<li>图片尽可能使用横向排列</li>
					<li>hover变化效果相关图片靠在一起</li>
					<li>需要平铺的图片尽量不要合并在sprites中</li>
					<li>sprites之前的原图要进行保留，合并产生的图片也应保留原图和参考线。</li>
				</ul>
			</li>
			<li>
			<p>使用table标签时(尽量避免使用table标签)</p>
			<p>请不要用width/ height/cellspacing/cellpadding等table属性直接定义表现, 应尽可能的利用table自身私有属性分离结构与表现, 如：<span class="hl_4">thead,tr,th,td,tbody,tfoot,colgroup,scope；</span></p>
			<p>(cellspaing及cellpadding的css控制方法: <span class="hl_2">table{border:0;margin:0;border-collapse:collapse;} table th, table td{padding:0;})</span></p>	
			</li>
			<li>禁止使用&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=7&quot; /&gt; 强制兼容ie8</li>
			<li><p>用png图片做图片时, 要求图片格式为png-8格式,若png-8实在影响图片质量或其中有半透明效果, 请为ie6单独定义背景:</p>
				<p>书写示例：</p>
				<pre style="width:850px;">_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=crop, src='img/bg.png');
</pre>
			</li>
			<li>
				<p>避免兼容性属性的使用, 比如text-shadow || css3的相关属性。这些属性可在后期采用渐进增强的方式进行单独引入。</p>
				<p>关于如何采用渐进增强的方式，将在后期考虑使用Modernizr.js 来进行浏览器甄别。对支持css3 html5的浏览器单独写代码。</p>
				<p>这里不做具体的要求，之后会作为一个单独的项目来进行。</p>
			</li>
			<li>减少使用影响性能的属性,主要是定位和浮动, 比如position:absolute || float</li>
			<li>必须为大区块样式添加注释, 小区块适量注释，以便后台人员嵌套代码</li>
			<li>
				<p>要注意利用CSS简写，简写是书写高效CSS的方法之一。可以减少代码冗余。不过在书写过程中一定注意书写时的顺序问题。不然可能导致所设样式无效。</p>
				<span>书写示例：</span><span class="hl_5">font:font-style font-variant font-weight font-size/line-height font-family</span>
				<p>注意：font-style font-variant font-weight必须按照顺序放在最前面。这三项为可选项，而之后的除了line-height为可选项外其他为必选项，任何一个属性被忽略，整行属性将无效。</p>
				<pre>p{
    font-style:italic;
    font-variant:small-caps;
    font-weight:700;
    font-size:12px;
    line-height:24px;
    font-family:airal;
}
</pre>
<p>简写后为：<span class="hl_3">p{font:italic small-caps 700 12px/24px arial;}</span></p>
			</li>
		</ol>
	</div>
</body>
</html>